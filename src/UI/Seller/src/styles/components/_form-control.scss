// invalid inputs
.form-control.ng-dirty.ng-invalid {
    border: solid 1px $danger;
  }
  
  .error-message {
    font-size: 15px;
    color: $form-feedback-invalid-color;
  }


//   toggle switch
  .switch {
    position: relative;
    display: inline-block;
    width: 45px;
    height: 24px;
    input {
      opacity: 0;
      width: 0;
      height: 0;
      &:checked {
        + .slider {
          background-color: $primary;
          &:before {
            -webkit-transform: translateX(20px);
            -ms-transform: translateX(20px);
            transform: translateX(20px);
          }
        }
      }
      &:focus {
        + .slider {
          box-shadow: 0 0 1px $primary;
        }
      }
    }
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      -webkit-transition: 0.2s;
      transition: 0.2s;
      &.round {
        border-radius: 34px;
        &:before {
          border-radius: 50%;
        }
      }
      &:before {
        position: absolute;
        content: '';
        height: 16px;
        width: 16px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: 0.2s;
        transition: 0.2s;
      }
    }
  }

  // Custom checkboxes
/* The container */
.check-container {
    margin-top: 0.5rem;
    display: block;
    position: relative;
    padding-left: 25px;
    margin-bottom: 12px;
    font-size: 14px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    transition: 200ms all ease;
    & input:disabled {
      cursor: default;
    }
    .check-label {
      font-size: 1rem;
      margin-bottom: 0;
    }
  }
  
  /* Hide the browser's default checkbox */
  .check-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    border-radius: 5px;
    border: 1px solid #d1d1d1;
    background-color: #eee;
  }
  
  /* Look disabled, when disabled */
  .check-container input:disabled ~ .checkmark {
    background-color: #d1d1d1;
    border: 1px solid #d1d1d1;
    cursor: default;
  }
  
  /* On mouse-over, add a grey background color */
  .check-container:hover input ~ .checkmark {
    background-color: #ccc;
    border: 1px solid #ccc;
  }
  
  /* When the checkbox is checked, add a blue background */
  .check-container input:checked ~ .checkmark {
    background-color: white;
    border: 1px solid $primary;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: '';
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .check-container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .check-container .checkmark:after {
    left: 6px;
    top: 3px;
    width: 5px;
    height: 10px;
    border: solid $primary;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }